### Jimy Munandar (B2A020089)

generate_bernoulli <- function()
{
  # input parameter
  a <- as.integer(readline("Masukkan Nilai a: "))
  z0 <- as.integer(readline("Masukkan Nilai z0: "))
  c <- as.integer(readline("Masukkan Nilai c: "))
  m <- as.integer(readline("Masukkan Nilai m: "))
  n <- as.integer(readline("Masukkan Nilai n: "))
  p <- as.numeric(readline("Masukkan Nilai p: "))
  
  # generate fungsi percobaan bernoulli
  trial <- function(n, p){
    X <- runif(n)
    Z <- (X <= p) + 0
    (tabel <- table(Z)/length(Z))
  }
  
  xi <- matrix(NA, n, 3)
  colnames(xi) <- c("aZ(i-1)+c", "Xi", "Ui")
  for (i in 1:n)
  {
    xi[i, 1] <- (a * z0 + c)    # membuat nilai pada kolom pertama (Zi = aZ0 + c)
    xi[i, 2] <- xi[i, 1] %% m   # membuat nilai kolom kedua Zi*mod
    xi[i, 3] <- xi[i, 2] / m    # membuat nilai uniform pada kolom ketiga
    z0 <- xi[i, 2]              # z0 akan diganti sampai perulangan berikutnya
  }
  
  # Menggunakan kolom ketiga untuk nilai probabilitas percobaan bernoulli
  yi <- matrix(NA, n, 3)
  colnames(yi) <- c("Xi", "0", "1")
  for (i in 1:n)
  {
    yi[i,1] <- xi[i, 2]
    yi[i,2:3] <- trial(xi[i,2],p)
  }
  View(xi)
  View(yi)
  }
  
generate_bernoulli()
